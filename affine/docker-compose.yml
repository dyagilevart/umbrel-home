services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable
    container_name: affine_selfhosted
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']
    ports:
      - '3010:3010'
      - '5555:5555'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - affine-config:/root/.affine/config
      # blob storage
      - affine-storage:/root/.affine/storage
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: unless-stopped
    environment:
      NODE_OPTIONS: "--import=./scripts/register.js"
      AFFINE_CONFIG_PATH: /root/.affine/config
      REDIS_SERVER_HOST: redis
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: production
      AFFINE_SERVER_HTTPS: true
      AFFINE_SERVER_EXTERNAL_URL: ${AFFINE_SERVER_EXTERNAL_URL}
      MAILER_HOST: ${MAILER_HOST}
      MAILER_PORT: ${MAILER_PORT}
      MAILER_USER: ${MAILER_USER}
      MAILER_PASSWORD: ${MAILER_PASSWORD}
      MAILER_SENDER: ${MAILER_SENDER}
      # Telemetry allows us to collect data on how you use the affine. This data will helps us improve the app and provide better features.
      # Uncomment next line if you wish to quit telemetry.
      # TELEMETRY_ENABLE: false
  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - affine-redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:16
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - affine-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U affine']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
  adminer:
    image: adminer
    container_name: affine_adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 3011:8080
volumes:
  affine-config:
  affine-storage:
  affine-redis:
  affine-postgres:
